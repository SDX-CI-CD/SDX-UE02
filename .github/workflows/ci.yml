name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Go and Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'

      - name: Lint Go code
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54.2
          working-directory: ./src
          args: --timeout=3m

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile

  build:
    name: Build Multi-Arch Docker Image
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for testing
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          load: true
          tags: recipe-api:latest

  scan:
    name: Scan Image and Update Go Dependencies
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'

      - name: Update Go dependencies
        run: |
          cd src
          go get -u ./...

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy Scan
        run: trivy image recipe-api:latest

  test:
    name: Run Integration Tests
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start services with Docker Compose
        run: docker compose up -d

      - name: Wait for app to become ready
        run: |
          for i in {1..10}; do
            curl -s http://localhost:8080/health && exit 0
            echo "Waiting for app to start..."
            sleep 3
          done
          echo "App did not become ready in time"
          exit 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: pip install requests

      - name: Run integration tests
        run: python3 api-test-example.py

  push:
    name: Push to GitHub Container Registry
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Multi-Arch Image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/sdx-ci-cd/recipe-api:latest
