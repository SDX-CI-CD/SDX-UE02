name: CI

on:
  push:
    branches:
      - "main"

jobs:
  lint:
    name: Lint Go + Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Lint Go code
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          working-directory: src
          args: --timeout=3m

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  build:
    name: Build & Push Multi-Arch Docker Image to GHCR
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch Docker image to GHCR
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/sdx-ci-cd/recipe-api:latest \
            --push .

  scan:
    name: Scan Image + Update Go Deps
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan image from GHCR
        run: trivy image ghcr.io/sdx-ci-cd/recipe-api:latest

      - name: Update Go dependencies
        run: |
          cd src
          go get -u ./...

  test:
    name: Run API Integration Tests
    needs: scan
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: recipes
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build test image locally
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t recipe-api:local \
            --load .

      - name: Run app in Docker
        run: |
          docker run -d -p 8080:8080 --network host --name recipe-api recipe-api:local

      - name: Run API test script
        run: python3 api-test-example.py
