name: CI

on:
  push:
    branches:
      - "main"

jobs:
  lint:
    name: Lint Go + Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          working-directory: src

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  build:
    name: Build Multi-Arch Docker Image
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t yourdockerhubusername/sdx-app:latest \
            --push .

  scan:
    name: Scan Docker Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan image
        run: trivy image yourdockerhubusername/sdx-app:latest

      - name: Update Go Dependencies
        run: |
          cd src
          go get -u ./...

  test:
    name: API Integration Tests
    needs: scan
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: recipes
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and Run Docker Container
        run: |
          docker build -t sdx-app .
          docker run -d -p 8080:8080 --name sdx-app --network host sdx-app

      - name: Run API Test Script
        run: python3 api-test-example.py
