name: CI

on:
  push:
    branches:
      - "main"

jobs:
  lint:
    name: Lint Go + Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'

      - name: Lint Go code
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54.2
          working-directory: src

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  build-test-push:
    name: Build, Test, Scan, Push
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image (single arch for test/scan)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          platforms: linux/amd64
          tags: localscanimg

      - name: Run services with Compose
        run: docker compose up -d

      - name: Wait for app to be ready
        run: |
          for i in {1..10}; do
            curl -s http://localhost:8080/recipes && echo "App is ready" && exit 0
            echo "Waiting for app to start..."
            sleep 3
          done
          echo "App did not become ready in time" && exit 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: pip install requests

      - name: Run integration test
        run: python -m unittest api-test-example.py

      - name: Update Go dependencies
        run: |
          cd src
          go get -u ./...

      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: localscanimg
          severity: CRITICAL,HIGH
          format: table

      - name: Build & Push Multi-Arch Image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/sdx-ci-cd/recipe-api:latest
